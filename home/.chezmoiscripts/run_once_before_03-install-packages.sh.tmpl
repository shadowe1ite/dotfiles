#!/usr/bin/env bash
set -euo pipefail

# Ensure signals are properly forwarded
trap 'exit 130' INT

{{ $base       := include ".chezmoidata/packages/system/base.yaml"          | fromYaml }}
{{ $nvidia     := include ".chezmoidata/packages/system/nvidia.yaml"        | fromYaml }}
{{ $hyprland   := include ".chezmoidata/packages/desktop/hyprland.yaml"     | fromYaml }}
{{ $quickshell := include ".chezmoidata/packages/desktop/quickshell.yaml"   | fromYaml }}
{{ $legacy     := include ".chezmoidata/packages/desktop/legacy.yaml"       | fromYaml }}
{{ $user       := include ".chezmoidata/packages/applications/basic.yaml"   | fromYaml }}
{{ $editing    := include ".chezmoidata/packages/applications/editing.yaml" | fromYaml }}
{{ $games      := include ".chezmoidata/packages/applications/games.yaml"   | fromYaml }}

{{- define "list" -}}{{- range $cat, $pkgs := . }}{{ range $pkgs }} {{ . }}{{ end }}{{ end -}}{{- end }}

# Helper function for install or skip message
install_pkg() {
  local name=$1
  local packages=$2
  echo "$(gum style --foreground 4 "[INFO]") Installing ${name} packages"

  # Check if jack2 exists and remove it
  if pacman -Q jack2 &>/dev/null; then
    gum spin --title "Removing conflicting jack2..." -- yay -Rnsdd --noconfirm jack2
  fi

  # Use this approach to better handle Ctrl+C
  gum spin --title "Installing ${name} packages..." -- bash -c "yay -S --asexplicit --sudoloop --needed --noconfirm --removemake ${packages} || exit \$?" && echo "$(gum style --foreground 10 "[SUCCESS]")" || echo "$(gum style --foreground 1 "[FAILED]")"
  echo
}

skip_pkg() {
  local name=$1
  echo "$(gum style --foreground 3 "[WARN]") Skipping ${name} packages"
  echo
}

# Update database
gum spin --title "Sending Telegram reminder" -- curl -s -X POST "https://api.telegram.org/bot{{ pass "telegram/bot/token" }}/sendMessage" -d chat_id="{{ pass "telegram/bot/chatId" }}" -d text="ðŸ“¦ Package installion started ..."

echo "$(gum style --foreground 4 "[INFO]") Updating database"
gum spin --title "Updating database..." -- bash -c "yay -Syy --noconfirm --sudoloop || exit \$?" && echo "$(gum style --foreground 10 "[SUCCESS]")" || echo "$(gum style --foreground 1 "[FAILED]")"
echo

# Install packages

install_pkg "Base" "{{ template "list" $base }}"
install_pkg "Nvidia" "{{ template "list" $nvidia }}"
install_pkg "Hyprland" "{{ template "list" $hyprland }}"

{{ if .quickshell }}
install_pkg "quickshell" "{{ template "list" $quickshell }}"
{{ else }}
skip_pkg "quickshell"
{{ end }}

{{ if .legacy }}
install_pkg "legacy" "{{ template "list" $legacy }}"
{{ else }}
skip_pkg "legacy"
{{ end }}

install_pkg "User" "{{ template "list" $user }}"

{{ if .editing }}
install_pkg "Editing" "{{ template "list" $editing }}"
{{ else }}
skip_pkg "Editing"
{{ end }}

{{ if .games }}
install_pkg "Games" "{{ template "list" $games }}"
{{ else }}
skip_pkg "Games"
{{ end }}

gum spin --title "Sending Telegram reminder" -- curl -s -X POST "https://api.telegram.org/bot{{ pass "telegram/bot/token" }}/sendMessage" -d chat_id="{{ pass "telegram/bot/chatId" }}" -d text="âœ… Package Installation Finished."


echo "$(gum style --foreground 10 "[SUCCESS]") All done."
